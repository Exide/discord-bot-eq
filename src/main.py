import argparse
import asyncio
import aiofiles
import io
import time
import tobon

def parse_args():
    parser = argparse.ArgumentParser(description='subscribe to, and record, live currency data')
    parser.add_argument('--chat_log', help='Path to the chat log being generated by EQ', default='eq_chat.log', dest='chat_log', action='store')
    parser.add_argument('--poll_delay', help='Milliseconds to wait after EOF reached', default=1000, dest='poll_delay_ms', action='store')
    return parser.parse_args()


def is_auction_message(line):
    return ' auctions, ' in line


args = parse_args()
polling = True
is_rate_limited = False
buffer = []

# async with aiofiles.open(args.chat_log, mode='r') as f:
#     f.seek(0, io.SEEK_END)
#
#     while polling:
#         for line in f:
#             if not is_auction_message(line):
#                 continue
#
#             if is_rate_limited:
#                 buffer.append(line)
#                 continue
#
#             client.send_message(channel, 'It is good to see the young show an interest in the ways of magic. Its circles can be used in tandem with our unique ways of tinkering.')
#
#         poll_delay_seconds = args.poll_delay_ms / 1000
#         time.sleep(poll_delay_seconds)

loop = asyncio.get_event_loop()
try:
    loop.run_until_complete(tobon.start())
except KeyboardInterrupt:
    loop.run_until_complete(tobon.stop())
finally:
    loop.close()
